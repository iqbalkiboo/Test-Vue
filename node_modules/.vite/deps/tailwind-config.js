import {
  require_cloneDeep,
  require_colors,
  require_config_full
} from "./chunk-CZ6SW2AQ.js";
import {
  require_color
} from "./chunk-3W5KSVO5.js";
import {
  __commonJS
} from "./chunk-DC5AMYBS.js";

// node_modules/tailwindcss/lib/util/createPlugin.js
var require_createPlugin = __commonJS({
  "node_modules/tailwindcss/lib/util/createPlugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    function createPlugin(plugin, config) {
      return {
        handler: plugin,
        config
      };
    }
    createPlugin.withOptions = function(pluginFunction, configFunction = () => ({})) {
      const optionsFunction = function(options) {
        return {
          __options: options,
          handler: pluginFunction(options),
          config: configFunction(options)
        };
      };
      optionsFunction.__isOptionsFunction = true;
      optionsFunction.__pluginFunction = pluginFunction;
      optionsFunction.__configFunction = configFunction;
      return optionsFunction;
    };
    var _default = createPlugin;
  }
});

// node_modules/tailwindcss/lib/public/create-plugin.js
var require_create_plugin = __commonJS({
  "node_modules/tailwindcss/lib/public/create-plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _createPlugin = _interop_require_default(require_createPlugin());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var _default = _createPlugin.default;
  }
});

// node_modules/tailwindcss/plugin.js
var require_plugin = __commonJS({
  "node_modules/tailwindcss/plugin.js"(exports, module) {
    var createPlugin = require_create_plugin();
    module.exports = (createPlugin.__esModule ? createPlugin : { default: createPlugin }).default;
  }
});

// node_modules/tailwindcss/colors.js
var require_colors2 = __commonJS({
  "node_modules/tailwindcss/colors.js"(exports, module) {
    var colors = require_colors();
    module.exports = (colors.__esModule ? colors : { default: colors }).default;
  }
});

// node_modules/mini-svg-data-uri/shorter-css-color-names.js
var require_shorter_css_color_names = __commonJS({
  "node_modules/mini-svg-data-uri/shorter-css-color-names.js"(exports, module) {
    module.exports = {
      aqua: /#00ffff(ff)?(?!\w)|#0ff(f)?(?!\w)/gi,
      azure: /#f0ffff(ff)?(?!\w)/gi,
      beige: /#f5f5dc(ff)?(?!\w)/gi,
      bisque: /#ffe4c4(ff)?(?!\w)/gi,
      black: /#000000(ff)?(?!\w)|#000(f)?(?!\w)/gi,
      blue: /#0000ff(ff)?(?!\w)|#00f(f)?(?!\w)/gi,
      brown: /#a52a2a(ff)?(?!\w)/gi,
      coral: /#ff7f50(ff)?(?!\w)/gi,
      cornsilk: /#fff8dc(ff)?(?!\w)/gi,
      crimson: /#dc143c(ff)?(?!\w)/gi,
      cyan: /#00ffff(ff)?(?!\w)|#0ff(f)?(?!\w)/gi,
      darkblue: /#00008b(ff)?(?!\w)/gi,
      darkcyan: /#008b8b(ff)?(?!\w)/gi,
      darkgrey: /#a9a9a9(ff)?(?!\w)/gi,
      darkred: /#8b0000(ff)?(?!\w)/gi,
      deeppink: /#ff1493(ff)?(?!\w)/gi,
      dimgrey: /#696969(ff)?(?!\w)/gi,
      gold: /#ffd700(ff)?(?!\w)/gi,
      green: /#008000(ff)?(?!\w)/gi,
      grey: /#808080(ff)?(?!\w)/gi,
      honeydew: /#f0fff0(ff)?(?!\w)/gi,
      hotpink: /#ff69b4(ff)?(?!\w)/gi,
      indigo: /#4b0082(ff)?(?!\w)/gi,
      ivory: /#fffff0(ff)?(?!\w)/gi,
      khaki: /#f0e68c(ff)?(?!\w)/gi,
      lavender: /#e6e6fa(ff)?(?!\w)/gi,
      lime: /#00ff00(ff)?(?!\w)|#0f0(f)?(?!\w)/gi,
      linen: /#faf0e6(ff)?(?!\w)/gi,
      maroon: /#800000(ff)?(?!\w)/gi,
      moccasin: /#ffe4b5(ff)?(?!\w)/gi,
      navy: /#000080(ff)?(?!\w)/gi,
      oldlace: /#fdf5e6(ff)?(?!\w)/gi,
      olive: /#808000(ff)?(?!\w)/gi,
      orange: /#ffa500(ff)?(?!\w)/gi,
      orchid: /#da70d6(ff)?(?!\w)/gi,
      peru: /#cd853f(ff)?(?!\w)/gi,
      pink: /#ffc0cb(ff)?(?!\w)/gi,
      plum: /#dda0dd(ff)?(?!\w)/gi,
      purple: /#800080(ff)?(?!\w)/gi,
      red: /#ff0000(ff)?(?!\w)|#f00(f)?(?!\w)/gi,
      salmon: /#fa8072(ff)?(?!\w)/gi,
      seagreen: /#2e8b57(ff)?(?!\w)/gi,
      seashell: /#fff5ee(ff)?(?!\w)/gi,
      sienna: /#a0522d(ff)?(?!\w)/gi,
      silver: /#c0c0c0(ff)?(?!\w)/gi,
      skyblue: /#87ceeb(ff)?(?!\w)/gi,
      snow: /#fffafa(ff)?(?!\w)/gi,
      tan: /#d2b48c(ff)?(?!\w)/gi,
      teal: /#008080(ff)?(?!\w)/gi,
      thistle: /#d8bfd8(ff)?(?!\w)/gi,
      tomato: /#ff6347(ff)?(?!\w)/gi,
      violet: /#ee82ee(ff)?(?!\w)/gi,
      wheat: /#f5deb3(ff)?(?!\w)/gi,
      white: /#ffffff(ff)?(?!\w)|#fff(f)?(?!\w)/gi
    };
  }
});

// node_modules/mini-svg-data-uri/index.js
var require_mini_svg_data_uri = __commonJS({
  "node_modules/mini-svg-data-uri/index.js"(exports, module) {
    var shorterNames = require_shorter_css_color_names();
    var REGEX = {
      whitespace: /\s+/g,
      urlHexPairs: /%[\dA-F]{2}/g,
      quotes: /"/g
    };
    function collapseWhitespace(str) {
      return str.trim().replace(REGEX.whitespace, " ");
    }
    function dataURIPayload(string) {
      return encodeURIComponent(string).replace(REGEX.urlHexPairs, specialHexEncode);
    }
    function colorCodeToShorterNames(string) {
      Object.keys(shorterNames).forEach(function(key) {
        if (shorterNames[key].test(string)) {
          string = string.replace(shorterNames[key], key);
        }
      });
      return string;
    }
    function specialHexEncode(match) {
      switch (match) {
        case "%20":
          return " ";
        case "%3D":
          return "=";
        case "%3A":
          return ":";
        case "%2F":
          return "/";
        default:
          return match.toLowerCase();
      }
    }
    function svgToTinyDataUri(svgString) {
      if (typeof svgString !== "string") {
        throw new TypeError("Expected a string, but received " + typeof svgString);
      }
      if (svgString.charCodeAt(0) === 65279) {
        svgString = svgString.slice(1);
      }
      var body = colorCodeToShorterNames(collapseWhitespace(svgString)).replace(REGEX.quotes, "'");
      return "data:image/svg+xml," + dataURIPayload(body);
    }
    svgToTinyDataUri.toSrcset = function toSrcset(svgString) {
      return svgToTinyDataUri(svgString).replace(/ /g, "%20");
    };
    module.exports = svgToTinyDataUri;
  }
});

// node_modules/tailwindcss/lib/public/default-theme.js
var require_default_theme = __commonJS({
  "node_modules/tailwindcss/lib/public/default-theme.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _cloneDeep = require_cloneDeep();
    var _configfull = _interop_require_default(require_config_full());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var _default = (0, _cloneDeep.cloneDeep)(_configfull.default.theme);
  }
});

// node_modules/tailwindcss/defaultTheme.js
var require_defaultTheme = __commonJS({
  "node_modules/tailwindcss/defaultTheme.js"(exports, module) {
    var defaultTheme = require_default_theme();
    module.exports = (defaultTheme.__esModule ? defaultTheme : { default: defaultTheme }).default;
  }
});

// node_modules/@tailwindcss/forms/src/index.js
var require_src = __commonJS({
  "node_modules/@tailwindcss/forms/src/index.js"(exports, module) {
    var svgToDataUri = require_mini_svg_data_uri();
    var plugin = require_plugin();
    var defaultTheme = require_defaultTheme();
    var colors = require_colors2();
    var [baseFontSize, { lineHeight: baseLineHeight }] = defaultTheme.fontSize.base;
    var { spacing, borderWidth, borderRadius } = defaultTheme;
    function resolveColor(color, opacityVariableName) {
      return color.replace("<alpha-value>", `var(${opacityVariableName}, 1)`);
    }
    var forms = plugin.withOptions(function(options = { strategy: void 0 }) {
      return function({ addBase, addComponents, theme }) {
        function resolveChevronColor(color, fallback) {
          let resolved = theme(color);
          if (!resolved || resolved.includes("var(")) {
            return fallback;
          }
          return resolved.replace("<alpha-value>", "1");
        }
        const strategy = options.strategy === void 0 ? ["base", "class"] : [options.strategy];
        const rules = [
          {
            base: [
              "[type='text']",
              "input:where(:not([type]))",
              "[type='email']",
              "[type='url']",
              "[type='password']",
              "[type='number']",
              "[type='date']",
              "[type='datetime-local']",
              "[type='month']",
              "[type='search']",
              "[type='tel']",
              "[type='time']",
              "[type='week']",
              "[multiple]",
              "textarea",
              "select"
            ],
            class: [".form-input", ".form-textarea", ".form-select", ".form-multiselect"],
            styles: {
              appearance: "none",
              "background-color": "#fff",
              "border-color": resolveColor(
                theme("colors.gray.500", colors.gray[500]),
                "--tw-border-opacity"
              ),
              "border-width": borderWidth["DEFAULT"],
              "border-radius": borderRadius.none,
              "padding-top": spacing[2],
              "padding-right": spacing[3],
              "padding-bottom": spacing[2],
              "padding-left": spacing[3],
              "font-size": baseFontSize,
              "line-height": baseLineHeight,
              "--tw-shadow": "0 0 #0000",
              "&:focus": {
                outline: "2px solid transparent",
                "outline-offset": "2px",
                "--tw-ring-inset": "var(--tw-empty,/*!*/ /*!*/)",
                "--tw-ring-offset-width": "0px",
                "--tw-ring-offset-color": "#fff",
                "--tw-ring-color": resolveColor(
                  theme("colors.blue.600", colors.blue[600]),
                  "--tw-ring-opacity"
                ),
                "--tw-ring-offset-shadow": `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,
                "--tw-ring-shadow": `var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color)`,
                "box-shadow": `var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)`,
                "border-color": resolveColor(
                  theme("colors.blue.600", colors.blue[600]),
                  "--tw-border-opacity"
                )
              }
            }
          },
          {
            base: ["input::placeholder", "textarea::placeholder"],
            class: [".form-input::placeholder", ".form-textarea::placeholder"],
            styles: {
              color: resolveColor(theme("colors.gray.500", colors.gray[500]), "--tw-text-opacity"),
              opacity: "1"
            }
          },
          {
            base: ["::-webkit-datetime-edit-fields-wrapper"],
            class: [".form-input::-webkit-datetime-edit-fields-wrapper"],
            styles: {
              padding: "0"
            }
          },
          {
            // Unfortunate hack until https://bugs.webkit.org/show_bug.cgi?id=198959 is fixed.
            // This sucks because users can't change line-height with a utility on date inputs now.
            // Reference: https://github.com/twbs/bootstrap/pull/31993
            base: ["::-webkit-date-and-time-value"],
            class: [".form-input::-webkit-date-and-time-value"],
            styles: {
              "min-height": "1.5em"
            }
          },
          {
            // In Safari on iOS date and time inputs are centered instead of left-aligned and can't be
            // changed with `text-align` utilities on the input by default. Resetting this to `inherit`
            // makes them left-aligned by default and makes it possible to override the alignment with
            // utility classes without using an arbitrary variant to target the pseudo-elements.
            base: ["::-webkit-date-and-time-value"],
            class: [".form-input::-webkit-date-and-time-value"],
            styles: {
              "text-align": "inherit"
            }
          },
          {
            // In Safari on macOS date time inputs that are set to `display: block` have unexpected
            // extra bottom spacing. This can be corrected by setting the `::-webkit-datetime-edit`
            // pseudo-element to `display: inline-flex`, instead of the browser default of
            // `display: inline-block`.
            base: ["::-webkit-datetime-edit"],
            class: [".form-input::-webkit-datetime-edit"],
            styles: {
              display: "inline-flex"
            }
          },
          {
            // In Safari on macOS date time inputs are 4px taller than normal inputs
            // This is because there is extra padding on the datetime-edit and datetime-edit-{part}-field pseudo elements
            // See https://github.com/tailwindlabs/tailwindcss-forms/issues/95
            base: [
              "::-webkit-datetime-edit",
              "::-webkit-datetime-edit-year-field",
              "::-webkit-datetime-edit-month-field",
              "::-webkit-datetime-edit-day-field",
              "::-webkit-datetime-edit-hour-field",
              "::-webkit-datetime-edit-minute-field",
              "::-webkit-datetime-edit-second-field",
              "::-webkit-datetime-edit-millisecond-field",
              "::-webkit-datetime-edit-meridiem-field"
            ],
            class: [
              ".form-input::-webkit-datetime-edit",
              ".form-input::-webkit-datetime-edit-year-field",
              ".form-input::-webkit-datetime-edit-month-field",
              ".form-input::-webkit-datetime-edit-day-field",
              ".form-input::-webkit-datetime-edit-hour-field",
              ".form-input::-webkit-datetime-edit-minute-field",
              ".form-input::-webkit-datetime-edit-second-field",
              ".form-input::-webkit-datetime-edit-millisecond-field",
              ".form-input::-webkit-datetime-edit-meridiem-field"
            ],
            styles: {
              "padding-top": 0,
              "padding-bottom": 0
            }
          },
          {
            base: ["select"],
            class: [".form-select"],
            styles: {
              "background-image": `url("${svgToDataUri(
                `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"><path stroke="${resolveChevronColor(
                  "colors.gray.500",
                  colors.gray[500]
                )}" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 8l4 4 4-4"/></svg>`
              )}")`,
              "background-position": `right ${spacing[2]} center`,
              "background-repeat": `no-repeat`,
              "background-size": `1.5em 1.5em`,
              "padding-right": spacing[10],
              "print-color-adjust": `exact`
            }
          },
          {
            base: ["[multiple]", '[size]:where(select:not([size="1"]))'],
            class: ['.form-select:where([size]:not([size="1"]))'],
            styles: {
              "background-image": "initial",
              "background-position": "initial",
              "background-repeat": "unset",
              "background-size": "initial",
              "padding-right": spacing[3],
              "print-color-adjust": "unset"
            }
          },
          {
            base: [`[type='checkbox']`, `[type='radio']`],
            class: [".form-checkbox", ".form-radio"],
            styles: {
              appearance: "none",
              padding: "0",
              "print-color-adjust": "exact",
              display: "inline-block",
              "vertical-align": "middle",
              "background-origin": "border-box",
              "user-select": "none",
              "flex-shrink": "0",
              height: spacing[4],
              width: spacing[4],
              color: resolveColor(theme("colors.blue.600", colors.blue[600]), "--tw-text-opacity"),
              "background-color": "#fff",
              "border-color": resolveColor(
                theme("colors.gray.500", colors.gray[500]),
                "--tw-border-opacity"
              ),
              "border-width": borderWidth["DEFAULT"],
              "--tw-shadow": "0 0 #0000"
            }
          },
          {
            base: [`[type='checkbox']`],
            class: [".form-checkbox"],
            styles: {
              "border-radius": borderRadius["none"]
            }
          },
          {
            base: [`[type='radio']`],
            class: [".form-radio"],
            styles: {
              "border-radius": "100%"
            }
          },
          {
            base: [`[type='checkbox']:focus`, `[type='radio']:focus`],
            class: [".form-checkbox:focus", ".form-radio:focus"],
            styles: {
              outline: "2px solid transparent",
              "outline-offset": "2px",
              "--tw-ring-inset": "var(--tw-empty,/*!*/ /*!*/)",
              "--tw-ring-offset-width": "2px",
              "--tw-ring-offset-color": "#fff",
              "--tw-ring-color": resolveColor(
                theme("colors.blue.600", colors.blue[600]),
                "--tw-ring-opacity"
              ),
              "--tw-ring-offset-shadow": `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,
              "--tw-ring-shadow": `var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color)`,
              "box-shadow": `var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)`
            }
          },
          {
            base: [`[type='checkbox']:checked`, `[type='radio']:checked`],
            class: [".form-checkbox:checked", ".form-radio:checked"],
            styles: {
              "border-color": `transparent`,
              "background-color": `currentColor`,
              "background-size": `100% 100%`,
              "background-position": `center`,
              "background-repeat": `no-repeat`
            }
          },
          {
            base: [`[type='checkbox']:checked`],
            class: [".form-checkbox:checked"],
            styles: {
              "background-image": `url("${svgToDataUri(
                `<svg viewBox="0 0 16 16" fill="white" xmlns="http://www.w3.org/2000/svg"><path d="M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z"/></svg>`
              )}")`,
              "@media (forced-colors: active) ": {
                appearance: "auto"
              }
            }
          },
          {
            base: [`[type='radio']:checked`],
            class: [".form-radio:checked"],
            styles: {
              "background-image": `url("${svgToDataUri(
                `<svg viewBox="0 0 16 16" fill="white" xmlns="http://www.w3.org/2000/svg"><circle cx="8" cy="8" r="3"/></svg>`
              )}")`,
              "@media (forced-colors: active) ": {
                appearance: "auto"
              }
            }
          },
          {
            base: [
              `[type='checkbox']:checked:hover`,
              `[type='checkbox']:checked:focus`,
              `[type='radio']:checked:hover`,
              `[type='radio']:checked:focus`
            ],
            class: [
              ".form-checkbox:checked:hover",
              ".form-checkbox:checked:focus",
              ".form-radio:checked:hover",
              ".form-radio:checked:focus"
            ],
            styles: {
              "border-color": "transparent",
              "background-color": "currentColor"
            }
          },
          {
            base: [`[type='checkbox']:indeterminate`],
            class: [".form-checkbox:indeterminate"],
            styles: {
              "background-image": `url("${svgToDataUri(
                `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path stroke="white" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8h8"/></svg>`
              )}")`,
              "border-color": `transparent`,
              "background-color": `currentColor`,
              "background-size": `100% 100%`,
              "background-position": `center`,
              "background-repeat": `no-repeat`,
              "@media (forced-colors: active) ": {
                appearance: "auto"
              }
            }
          },
          {
            base: [`[type='checkbox']:indeterminate:hover`, `[type='checkbox']:indeterminate:focus`],
            class: [".form-checkbox:indeterminate:hover", ".form-checkbox:indeterminate:focus"],
            styles: {
              "border-color": "transparent",
              "background-color": "currentColor"
            }
          },
          {
            base: [`[type='file']`],
            class: null,
            styles: {
              background: "unset",
              "border-color": "inherit",
              "border-width": "0",
              "border-radius": "0",
              padding: "0",
              "font-size": "unset",
              "line-height": "inherit"
            }
          },
          {
            base: [`[type='file']:focus`],
            class: null,
            styles: {
              outline: [`1px solid ButtonText`, `1px auto -webkit-focus-ring-color`]
            }
          }
        ];
        const getStrategyRules = (strategy2) => rules.map((rule) => {
          if (rule[strategy2] === null) return null;
          return { [rule[strategy2]]: rule.styles };
        }).filter(Boolean);
        if (strategy.includes("base")) {
          addBase(getStrategyRules("base"));
        }
        if (strategy.includes("class")) {
          addComponents(getStrategyRules("class"));
        }
      };
    });
    module.exports = forms;
  }
});

// tailwind.config.js
var require_tailwind_config = __commonJS({
  "tailwind.config.js"(exports, module) {
    var plugin = require_plugin();
    var colors = require_colors2();
    var { parseColor } = require_color();
    var toRGB = (value) => {
      return parseColor(value).color.join(" ");
    };
    module.exports = {
      content: ["./src/**/*.{js,jsx,ts,vue}"],
      darkMode: "class",
      theme: {
        container: {
          screens: {
            "2xl": "1320px"
          }
        },
        extend: {
          screens: {
            "3xl": "1600px"
          },
          colors: {
            theme: {
              1: "rgb(var(--color-theme-1) / <alpha-value>)",
              2: "rgb(var(--color-theme-2) / <alpha-value>)"
            },
            primary: "rgb(var(--color-primary) / <alpha-value>)",
            secondary: "rgb(var(--color-secondary) / <alpha-value>)",
            success: "rgb(var(--color-success) / <alpha-value>)",
            info: "rgb(var(--color-info) / <alpha-value>)",
            warning: "rgb(var(--color-warning) / <alpha-value>)",
            pending: "rgb(var(--color-pending) / <alpha-value>)",
            danger: "rgb(var(--color-danger) / <alpha-value>)",
            light: "rgb(var(--color-light) / <alpha-value>)",
            dark: "rgb(var(--color-dark) / <alpha-value>)",
            darkmode: {
              50: "rgb(var(--color-darkmode-50) / <alpha-value>)",
              100: "rgb(var(--color-darkmode-100) / <alpha-value>)",
              200: "rgb(var(--color-darkmode-200) / <alpha-value>)",
              300: "rgb(var(--color-darkmode-300) / <alpha-value>)",
              400: "rgb(var(--color-darkmode-400) / <alpha-value>)",
              500: "rgb(var(--color-darkmode-500) / <alpha-value>)",
              600: "rgb(var(--color-darkmode-600) / <alpha-value>)",
              700: "rgb(var(--color-darkmode-700) / <alpha-value>)",
              800: "rgb(var(--color-darkmode-800) / <alpha-value>)",
              900: "rgb(var(--color-darkmode-900) / <alpha-value>)"
            }
          },
          fontFamily: {
            "public-sans": ["Public Sans"],
            "dm-sans": ["DM Sans"]
          },
          backgroundImage: {
            "texture-black": `url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='2346.899' height='1200.894' viewBox='0 0 2346.899 1200.894'%3E%3Cg id='Group_369' data-name='Group 369' transform='translate(-33.74 508.575)'%3E%3Cg id='Group_366' data-name='Group 366' transform='translate(33.74 -458.541)'%3E%3Crect id='Rectangle_492' data-name='Rectangle 492' width='745.289' height='650.113' transform='matrix(0.978, 0.208, -0.208, 0.978, 296.729, 261.648)' fill='rgba(30,41,59,0.01)'/%3E%3Crect id='Rectangle_491' data-name='Rectangle 491' width='1335.276' height='650.113' transform='translate(0 543.106) rotate(-24)' fill='rgba(30,41,59,0.01)'/%3E%3C/g%3E%3Cg id='Group_367' data-name='Group 367' transform='translate(1647.456 1026.688) rotate(-128)'%3E%3Crect id='Rectangle_492-2' data-name='Rectangle 492' width='745.289' height='650.113' transform='matrix(0.978, 0.208, -0.208, 0.978, 296.729, 261.648)' fill='rgba(30,41,59,0.01)'/%3E%3Crect id='Rectangle_491-2' data-name='Rectangle 491' width='1335.276' height='650.113' transform='translate(0 543.106) rotate(-24)' fill='rgba(30,41,59,0.01)'/%3E%3C/g%3E%3Cg id='Group_368' data-name='Group 368' transform='matrix(-0.656, -0.755, 0.755, -0.656, 1017.824, 1042.94)'%3E%3Crect id='Rectangle_492-3' data-name='Rectangle 492' width='745.289' height='650.113' transform='matrix(0.978, 0.208, -0.208, 0.978, 296.729, 261.648)' fill='rgba(30,41,59,0.01)'/%3E%3Crect id='Rectangle_491-3' data-name='Rectangle 491' width='1335.276' height='650.113' transform='translate(0 543.106) rotate(-24)' fill='rgba(30,41,59,0.01)'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A")`,
            "texture-white": `url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='2346.899' height='1200.894' viewBox='0 0 2346.899 1200.894'%3E%3Cg id='Group_369' data-name='Group 369' transform='translate(-33.74 508.575)'%3E%3Cg id='Group_366' data-name='Group 366' transform='translate(33.74 -458.541)'%3E%3Crect id='Rectangle_492' data-name='Rectangle 492' width='745.289' height='650.113' transform='translate(296.729 261.648) rotate(12.007)' fill='rgba(255,255,255,0.014)'/%3E%3Crect id='Rectangle_491' data-name='Rectangle 491' width='1335.276' height='650.113' transform='translate(0 543.106) rotate(-24)' fill='rgba(255,255,255,0.014)'/%3E%3C/g%3E%3Cg id='Group_367' data-name='Group 367' transform='translate(1647.456 1026.688) rotate(-128)'%3E%3Crect id='Rectangle_492-2' data-name='Rectangle 492' width='745.289' height='650.113' transform='translate(296.729 261.648) rotate(12.007)' fill='rgba(255,255,255,0.014)'/%3E%3Crect id='Rectangle_491-2' data-name='Rectangle 491' width='1335.276' height='650.113' transform='translate(0 543.106) rotate(-24)' fill='rgba(255,255,255,0.014)'/%3E%3C/g%3E%3Cg id='Group_368' data-name='Group 368' transform='matrix(-0.656, -0.755, 0.755, -0.656, 1017.824, 1042.94)'%3E%3Crect id='Rectangle_492-3' data-name='Rectangle 492' width='745.289' height='650.113' transform='translate(296.729 261.648) rotate(12.007)' fill='rgba(255,255,255,0.014)'/%3E%3Crect id='Rectangle_491-3' data-name='Rectangle 491' width='1335.276' height='650.113' transform='translate(0 543.106) rotate(-24)' fill='rgba(255,255,255,0.014)'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A")`,
            "chevron-white": `url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23ffffff95' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E")`,
            "chevron-black": `url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%2300000095' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E")`
          },
          container: {
            center: true
          }
        }
      },
      plugins: [
        require_src(),
        plugin(function({ addBase, matchUtilities }) {
          addBase({
            // Default colors
            ":root": {
              "--color-theme-1": toRGB("#03045e"),
              "--color-theme-2": toRGB("#0c4a6e"),
              "--color-primary": toRGB("#03045e"),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"])
            },
            // Default dark-mode colors
            ".dark": {
              "--color-primary": toRGB(colors.blue["700"]),
              "--color-darkmode-50": "87 103 132",
              "--color-darkmode-100": "74 90 121",
              "--color-darkmode-200": "65 81 114",
              "--color-darkmode-300": "53 69 103",
              "--color-darkmode-400": "48 61 93",
              "--color-darkmode-500": "41 53 82",
              "--color-darkmode-600": "40 51 78",
              "--color-darkmode-700": "35 45 69",
              "--color-darkmode-800": "27 37 59",
              "--color-darkmode-900": "15 23 42"
            },
            // Theme 1 colors
            ".theme-1": {
              "--color-theme-1": toRGB(colors.violet["900"]),
              "--color-theme-2": toRGB(colors.rose["800"]),
              "--color-primary": toRGB(colors.violet["900"]),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 2 colors
            ".theme-2": {
              "--color-theme-1": toRGB(colors.purple["900"]),
              "--color-theme-2": toRGB(colors.cyan["700"]),
              "--color-primary": toRGB(colors.purple["900"]),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 3 colors
            ".theme-3": {
              "--color-theme-1": toRGB(colors.cyan["700"]),
              "--color-theme-2": toRGB(colors.violet["800"]),
              "--color-primary": toRGB(colors.cyan["700"]),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 4 colors
            ".theme-4": {
              "--color-theme-1": toRGB(colors.sky["700"]),
              "--color-theme-2": toRGB(colors.rose["800"]),
              "--color-primary": toRGB(colors.sky["700"]),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 5 colors
            ".theme-5": {
              "--color-theme-1": toRGB(colors.sky["800"]),
              "--color-theme-2": toRGB(colors.emerald["800"]),
              "--color-primary": toRGB(colors.sky["800"]),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 6 colors
            ".theme-6": {
              "--color-theme-1": toRGB("#247ba0"),
              "--color-theme-2": toRGB("#0a2463"),
              "--color-primary": toRGB("#247ba0"),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 7 colors
            ".theme-7": {
              "--color-theme-1": toRGB(colors.lime["950"]),
              "--color-theme-2": toRGB(colors.teal["900"]),
              "--color-primary": toRGB(colors.lime["950"]),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 8 colors
            ".theme-8": {
              "--color-theme-1": toRGB("#357266"),
              "--color-theme-2": toRGB("#0E3B43"),
              "--color-primary": toRGB("#357266"),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 9 colors
            ".theme-9": {
              "--color-theme-1": toRGB("#6C6C60"),
              "--color-theme-2": toRGB("#4D4D42"),
              "--color-primary": toRGB("#6C6C60"),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 10 colors
            ".theme-10": {
              "--color-theme-1": toRGB(colors.indigo["800"]),
              "--color-theme-2": toRGB(colors.blue["900"]),
              "--color-primary": toRGB(colors.indigo["800"]),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 11 colors
            ".theme-11": {
              "--color-theme-1": toRGB("#2f3e46"),
              "--color-theme-2": toRGB("#52796f"),
              "--color-primary": toRGB("#2f3e46"),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 12 colors
            ".theme-12": {
              "--color-theme-1": toRGB("#5e503f"),
              "--color-theme-2": toRGB("#22333b"),
              "--color-primary": toRGB("#5e503f"),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 13 colors
            ".theme-13": {
              "--color-theme-1": toRGB("#5e548e"),
              "--color-theme-2": toRGB("#231942"),
              "--color-primary": toRGB("#5e548e"),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 14 colors
            ".theme-14": {
              "--color-theme-1": toRGB("#02292f"),
              "--color-theme-2": toRGB("#767522"),
              "--color-primary": toRGB("#02292f"),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 15 colors
            ".theme-15": {
              "--color-theme-1": toRGB("#4c956c"),
              "--color-theme-2": toRGB("#006466"),
              "--color-primary": toRGB("#4c956c"),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 16 colors
            ".theme-16": {
              "--color-theme-1": toRGB(colors.sky["900"]),
              "--color-theme-2": toRGB(colors.blue["950"]),
              "--color-primary": toRGB(colors.sky["900"]),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            },
            // Theme 17 colors
            ".theme-17": {
              "--color-theme-1": toRGB(colors.slate["900"]),
              "--color-theme-2": toRGB(colors.slate["800"]),
              "--color-primary": toRGB(colors.slate["900"]),
              "--color-secondary": toRGB(colors.slate["200"]),
              "--color-success": toRGB(colors.teal["600"]),
              "--color-info": toRGB(colors.cyan["600"]),
              "--color-warning": toRGB(colors.yellow["600"]),
              "--color-pending": toRGB(colors.orange["700"]),
              "--color-danger": toRGB(colors.red["700"]),
              "--color-light": toRGB(colors.slate["100"]),
              "--color-dark": toRGB(colors.slate["800"]),
              "&.dark": {
                "--color-primary": toRGB(colors.sky["800"])
              }
            }
          });
        })
      ]
    };
  }
});
export default require_tailwind_config();
//# sourceMappingURL=tailwind-config.js.map
